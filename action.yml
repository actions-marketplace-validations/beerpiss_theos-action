name: 'Setup Theos'
description: 'Install Theos and prepare it for building projects'
author: 'beerpsi'
inputs:
  theos-dir:
    description: 'Where to install Theos (relative to the repo workspace itself)'
    required: false
    default: theos
  theos-src:
    description: 'Where to clone Theos itself from (git URL)'
    required: false
    default: 'https://github.com/theos/theos'
  theos-sdks:
    description: 'Where to clone the iOS SDKs from (git URL)'
    required: false
    default: 'https://github.com/theos/sdks'
  cache:
    description: 'Cache Theos installation for faster installation'
    required: false
    default: true
  cache-dir-theos:
    description: 'Cache location for Theos'
    required: false
    default: /usr/local/opt/__theos_cache
  cache-dir-sdks:
    description: 'Cache location for SDKs'
    required: false
    default: /usr/local/opt/__theos_sdks_cache
runs:
  using: "composite"
  steps:
    - id: information
      shell: bash
      run: |
        echo "::set-output name=theos::`git ls-remote https://github.com/theos/theos | head -n 1 | cut -f 1`"
        echo "::set-output name=theos-sdks::`git ls-remote https://github.com/theos/sdks | head -n 1 | cut -f 1`"
        echo "::set-output name=darwin_version::`uname -r | cut -d'.' -f1 | tr -d '\n'`"
        
    - uses: actions/cache@v2
      id: theos-cache
      if: inputs.cache == 'true'
      with:
        path: ${{ inputs.cache-dir-theos }}
        key: ${{ runner.os }}-${{ steps.information.outputs.theos }}-theos
    
    - uses: actions/cache@v2
      id: theos-sdks-cache
      if: inputs.cache == 'true'
      with:
        path: ${{ inputs.cache-dir-sdks }}
        key: ${{ runner.os }}-${{ steps.information.outputs.theos-sdks }}-theos
        
    - name: Install ldid and make
      if: steps.information.outputs.darwin_version >= 20
      uses: beerpiss/procursus-action@v1
      with:
        packages: ldid make
        
    - name: Install ldid and make
      if: steps.information.outputs.darwin_version < 20
      shell: bash
      run: |
        brew install ldid make
    
    - name: prepare environment
      shell: bash
      run: |
        echo "THEOS=$GITHUB_WORKSPACE/${{ inputs.theos-dir }}" >> $GITHUB_ENV
        PATH="/usr/local/opt/make/libexec/gnubin:$PATH" >> $GITHUB_ENV

    - name: get theos (uncached)
      if: inputs.cache != 'true' || steps.theos-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        git clone --recursive ${{ inputs.theos-src }} ${{ github.workspace }}/${{ inputs.theos-dir }}

    - name: restore theos from cache
      if: inputs.cache == 'true' && steps.theos-cache.outputs.cache-hit == 'true'
      shell: bash
      run: |
        sudo rsync -aAXEWSlHh --info=progress1 --no-compress ${{ inputs.cache-dir-theos }}/${{ inputs.theos-dir }} ${{ github.workspace }}
    
    - name: cache theos
      if: inputs.cache == 'true'
      shell: bash
      run: |
        sudo rsync -aAXESlHh --info=progress1 --no-compress ${{ github.workspace }}/${{ inputs.theos-dir }} ${{ inputs.cache-dir-theos }}/

    - name: get sdks (uncached)
      if: inputs.cache != 'true' || steps.theos-sdks-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        cd ${{ github.workspace }}/${{ inputs.theos-dir }}/sdks
        curl -sLO ${{ inputs.theos-sdks }}/archive/master.zip
        TMP=$(mktemp -d)
        7z x master.zip -o$TMP
        mv $TMP/*-master/*.sdk $THEOS/sdks
        rm -r master.zip $TMP
    
    - name: restore theos sdks from cache
      if: inputs.cache == 'true' && steps.theos-sdks-cache.outputs.cache-hit == 'true'
      shell: bash
      run: |
        sudo rsync -aAXEWSlHh --info=progress1 --no-compress ${{ inputs.cache-dir-sdks }}/sdks ${{ github.workspace }}/${{ inputs.theos-dir }}
   
    - name: cache sdks
      if: inputs.cache == 'true'
      shell: bash
      run: | 
        sudo rsync -aAXESlHh --info=progress1 --no-compress ${{ github.workspace }}/${{ inputs.theos-dir }}/sdks ${{ inputs.cache-dir-sdks }}/
        
    
      

branding:
  icon: download-cloud
  color: purple
